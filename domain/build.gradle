apply plugin: 'com.android.library'

//noinspection GroovyUnusedAssignment
sourceCompatibility = 1.7
//noinspection GroovyUnusedAssignment
targetCompatibility = 1.7

android {

  sourceSets {
    main {
      manifest.srcFile 'src/main/java/AndroidManifest.xml'
    }
  }

  defaultPublishConfig "debug"

  def globalConfiguration = rootProject.extensions.getByName("ext")

  compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
  buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

  defaultConfig {
    minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
    targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
    versionCode globalConfiguration.getAt("androidVersionCode")
  }

  packagingOptions {
    exclude 'LICENSE.txt'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/ASL2.0'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
  }

  lintOptions {
    quiet true
    abortOnError false
    ignoreWarnings true
    disable 'InvalidPackage'  // Some libraries have issues with this
    disable 'OldTargetApi'    // Due to Robolectric that modifies the manifest when running tests
  }
}

dependencies {
  def domainDependencies = rootProject.ext.domainDependencies
  def domainTestDependencies = rootProject.ext.domainTestDependencies

  provided domainDependencies.javaxAnnotation

  compile domainDependencies.javaxInject
  compile domainDependencies.rxJava
  compile domainDependencies.arrow
  compile domainDependencies.jobqueue

  testCompile domainTestDependencies.junit
  testCompile domainTestDependencies.mockito
  testCompile domainTestDependencies.assertj
}
